@using SocialMedia.Core.Application.ViewModels.Publication
@using  SocialMedia.Core.Aplication.ViewModel.Comment
@using SocialMedia.Core.Application.ViewModels.User;
@model List<PublicationViewModel>
@{
    ViewData["Title"] = "Amigos";
}

<div class="row mt-5">
    @if (Model.Count == 0)
    {
        <div class="card-header bg-primary text-light">
            <h4>Este usuario no tiene publicaciones disponibles</h4>
        </div>
    }
    else
    {
        <div class="card-header bg-primary text-light">
            <h4>Publicaciones de mi amigo</h4>
        </div>
        @foreach (PublicationViewModel userVm in Model)
        {
            <div class="card shadow-sm ">
                <div class="card-body contCard">

                    @if (ViewBag.User != null)
                    {
                        @foreach (UserViewModel user in ViewBag.User as List<UserViewModel>)
                        {
                            @if (userVm.Id_User == user.Id)
                            {
                                <div class="cont_Perfil">
                                    <div class="contNamePerfil">
                                        <h3>@user.Name (@user.Username)</h3>
                                        <p class="p_DatePublication">@userVm.Created </p>

                                    </div>

                                    <div class="contImgPerfil">
                                        <img class="bd-placeholder-img card-img-top img-product-size img_profile" src="@user.ImageUrl" />
                                    </div>


                                </div>
                            }

                        }

                    }
                    @if (userVm.TitlePost != null)
                    {
                        <h4 class="card-title">@userVm.TitlePost </h4>
                    }

                    @if (userVm.ImageUrl != null)
                    {
                        <img class="bd-placeholder-img card-img-top img-product-size img_publicationHome" src="@userVm.ImageUrl" />

                    }





                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">

                            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#exampleModal-@userVm.Id">
                                Comentarios
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal-@userVm.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">

                        <div class="modal-header">
                            <p><b>@userVm.TitlePost</b></p>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">

                            <form method="post" id="formul" asp-action="Comment" asp-controller="Friend">
                                <div class="mb-3">
                                    <label for="filtrar" class="form-label">Introduzca el usuario:</label>
                                    <textarea type="text" class="form-control" required name="comment" id="filtrar" aria-describedby="emailHelp"></textarea>
                                </div>
                                <input type="hidden" name="Id_Publication" value="@userVm.Id" />
                                <button type="submit" class="btn btn-primary">Comentar</button>
                            </form>
                        </div>
                        @if (ViewBag.Comment != null)
                        {
                            <div style=" height: 200px; overflow-y: scroll;">
                                @foreach (CommentViewModel comment in ViewBag.Comment as List<CommentViewModel>)
                                {
                                    if (comment.Id_Publication == userVm.Id)
                                    {
                                        <div class="cont_Comment">
                                            <div class="contImgComment">
                                                <img class="bd-placeholder-img card-img-top img-product-size img_ComentUsers" src="@comment.ImageUrl" />
                                            </div>
                                            <div class="contTextComment">
                                                <p>@comment.Commentary</p>
                                            </div>
                                        </div>
                                    }


                                }

                            </div>
                        }

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                </div>
            </div>

        }
    }



</div>

